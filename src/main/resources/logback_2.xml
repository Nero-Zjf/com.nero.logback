<?xml version="1.0" encoding="UTF-8"?>
<configuration
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://www.padual.com/java/logback.xsd"
        scan="true" scanPeriod="60 seconds" debug="false" packagingData="true">
    <!-- 日志输出编码 -->
    <property name="log.filePath" value="logs"/>
    <property name="log.append" value="true"/>
    <property name="log.maxHistory" value="30"/>
    <property name="log.encode" value="UTF-8"/>
    <!-- 日志的显式格式 -->
    <property name="log.pattern"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}-%msg%n"/>
    <!-- 文件输出策略设置 -->
    <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 文件路径 -->
        <file>${log.filePath}/logback_debug.log</file>
        <!-- 日志输出格式设置-->
        <encoder>
            <!-- 输出格式设置 -->
            <pattern>${log.pattern}</pattern>
            <!-- 编码设置 -->
            <charset>${log.encode}</charset>
        </encoder>
        <!--TimeBasedRollingPolicy:配置日志所生成的目录以及生成文件名的规则 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 设置文件名称 -->
            <fileNamePattern>
                ${log.filePath}/logback/logback-%d{yyyy-MM-dd}.%i.log.zip
            </fileNamePattern>
            <!-- 写入文件方式 -->
            <append>${log.append}</append>
            <!-- 设置最大保存周期 -->
            <MaxHistory>${log.maxHistory}</MaxHistory>
            <!-- 日志总保存量为10GB -->
            <totalSizeCap>10GB</totalSizeCap>

            <!-- 策略触发器：告知 RollingFileAppender 合适激活滚动 -->
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--文件达到 最大值时会被压缩和切割 -->
                <maxFileSize>3KB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!-- 过滤器，过滤掉不是指定日志水平的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 设置日志级别 -->
            <level>DEBUG</level>
            <!-- 如果跟该日志水平相匹配，则接受 -->
            <onMatch>ACCEPT</onMatch>
            <!-- 如果跟该日志水平不匹配，则过滤掉 -->
            <onMismatch>ACCEPT</onMismatch>
        </filter>
    </appender>

    <!-- 根Logger节点，最顶级-->
    <root level="DEBUG">
        <appender-ref ref="DEBUG"/>
    </root>
</configuration>